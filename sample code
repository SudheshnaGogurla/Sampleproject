#If Win64 Then
  Private Declare PtrSafe Function URLDownloadToFile Lib "urlmon" Alias _
          "URLDownloadToFileA" ( _
          ByVal pCaller As LongLong, _
          ByVal szURL As String, _
          ByVal szFileName As String, _
          ByVal dwReserved As LongLong, _
          ByVal lpfnCB As LongLong) As LongLong
#Else
  Private Declare Function URLDownloadToFile Lib "urlmon" Alias _
          "URLDownloadToFileA" ( _
          ByVal pCaller As Long, _
          ByVal szURL As String, _
          ByVal szFileName As String, _
          ByVal dwReserved As Long, _
          ByVal lpfnCB As Long) As Long
#End If

filePath = Application.ActiveWorkbook.Name
    strDate = Replace(Date, "/", "_")
    strFilename = filePath & "_" & strDate & "_" & CInt(RunNumber) + 1 & ".xlsm"
    strSavePath = "Z:\Downloads\" & strFilename
    strFilePath = Application.ActiveWorkbook.FullName
    Call DownLoadFile(strFilePath, strSavePath)
    Call copyToSharePoint(sharepointURL, strSavePath)
    Set fso = CreateObject("Scripting.FileSystemObject")
    If (fso.FileExists(strFilePath)) Then
        aFile = fso.GetFile(strFilePath)
        fso.DeleteFile aFile
    End If
    Set fso = Nothing


Function copyToSharePoint(sharepointURL, filePath)
    'On Error GoTo errhandler
    'sharePointUrl should not end in a "/"
    'Initialize Variables
    Dim LlFileLength As Long
    Dim Lvarbin() As Byte
    Dim LobjXML As Object
    Dim LvarBinData As Variant
    Dim LstrFileName As String, PstrFullfileName As String, PstrTargetURL As String
    Dim fileName As String, lenFileName As Long
    
    'Extract file name
    lenFileName = Len(filePath) - InStrRev(filePath, "\")
    fileName = Right(filePath, lenFileName)
    
    'Check that the webUrl ends in an "/"
    If Right(sharepointURL, 1) <> "/" Then
        sharepointURL = sharepointURL & "/"
    End If
        
    '****************************   Upload binary files  *****************
    Set LobjXML = CreateObject("Microsoft.XMLHTTP")
    
    PstrFullfileName = filePath
    LlFileLength = FileLen(PstrFullfileName) - 1
    
    ' Read the file into a byte array.
    ReDim Lvarbin(LlFileLength)
    Open PstrFullfileName For Binary As #1
    Get #1, , Lvarbin
    Close #1
      ' Convert to variant to PUT.
    LvarBinData = Lvarbin
    PstrTargetURL = sharepointURL & fileName
    
    'Sheets("Sheet1").Cells(1, 1) = PstrTargetURL
    
    ' Put the data to the server; false means synchronous.
    LobjXML.Open "PUT", PstrTargetURL, False
    
    ' Send the file in.
    LobjXML.send LvarBinData
    
    Set LobjXML = Nothing
    Exit Function
    
errhandler:
    If Err.Number = 53 Then
        MsgBox "Excel was unable to create the HR file to submit to SharePoint. " & vbNewLine & _
        "Please check that you are not running out of disk space and that no MS Office add-in is causing issues with Excel.", vbCritical, "File Error"
        Exit Function
    Else
        MsgBox "Your HR could not be submitted to SharePoint. The following error occurred:" & vbNewLine & _
        "Error " & Err.Number & ": " & Err.Description, vbCritical, "Error Uploading to SharePoint"
        Exit Function
    End If
End Function



Function DownLoadFile(ByVal Url, ByVal SavePathName)
    DownLoadFile = URLDownloadToFile(0, Replace(Url, "\", "/"), SavePathName, 0, 0) = 0
End Function


For intColIndex = 0 To objRecordSet.Fields.Count - 1
     Sheets("Exceptions").Cells(1, intColIndex + 1) = objRecordSet.Fields(intColIndex).Name
Next
Set myconn = Nothing
Set objRecordSet = Nothing


StrTotalRows = Sheets("DefectsLog").Range("A" & Sheets("DefectsLog").Rows.Count).End(xlUp).Row


 strTotalRows = Sheets("Plan").Range("E" & Sheets("Plan").Rows.Count).End(xlUp).Row
            Set rngSearch = Sheets("Plan").Range("B1:" & "B" & strTotalRows)
            Set rngLast = rngSearch.Cells(rngSearch.Cells.Count)
            Set rngFound = rngSearch.Find(What:=strPod, After:=rngLast, LookIn:=xlFormulas, LookAt:=xlWhole, SearchOrder:=xlByRows, SearchDirection:=xlNext, MatchCase:=False, SearchFormat:=False)
            If Not rngFound Is Nothing Then
                strFirstAddress = rngFound.Address
                Do
                    strcol = rngFound.Column
                    strRow = rngFound.Row


Function delrows()
'        Dim ws3 As Worksheet
'
'        Set ws3 = ThisWorkbook.Sheets("GSAM")
'        ilimit = ws3.UsedRange.Rows.Count
'        For k = 2 To ilimit
'            ws3.Cells(2, 1).EntireRow.Delete
'        Next
        
        Worksheets("Plan").Rows(5 & ":" & Worksheets("Plan").Rows.Count).Delete

End Function


sgRowcount = Sheets("JiraMetrics").Range("B" & Sheets("JiraMetrics").Rows.Count).End(xlUp).Row
    For intMetrics = Rowstart To sgRowcount

 Set sourceCell = Sheets("JiraMetrics").Range("A:A").Find(What:=strSource, LookIn:=xlValues, LookAt:=xlWhole, _
                  MatchCase:=False, SearchFormat:=True)
                  
    strRowno = sourceCell.Row
    ColumnStart = 3

Sub JiaEndToEndReport()
  
  StartTime = Timer
  Const STR_BOUNDARY As String = "abc123-xyz123"
  Dim sUrl As String, sRest As String, sIssueNumber As String
  Dim sFileDataStr As String, sPath As String, sStatus As String
  Set oJiraService = New MSXML2.ServerXMLHTTP60
  
  'URL = "project =  AND ""PO"" = ""quities"" AND status = Canceled"
  'Jquery = "project = prname AND Status not in (Canceled, Resolved) AND ""Commitment Type"" not in ("UAT Defects") ORDER BY priority DESC, updated DESC"
   'ApiUrl = "http://.com/jira/rest/api/2/search?jql=project%20%3D%20REGOPSMII%20AND%20%22MII%20POD%22%20%3D%20%22Cash%20Equities%22%20AND%20status%20%3D%20Canceled&tempMax=1000"
'  ApiUrl = "http://project.jira.services.tet.com/jira/rest/api/2/search?jql=project%20%3D%20REGOPSMII%20AND%20Status%20not%20in%20%28Canceled%2C%20Resolved%29%20AND%20%22MII%20Commitment%20Type%22%20not%20in%20%28%22UAT%20Defects%22%29%20ORDER%20BY%20priority%20DESC%2C%20updated%20DESC&startAt=1&maxResults=1000"
'

'Delete Rows

Call delrows

  startAt = 0
  maxResults = 50

  For Jloop = 1 To 50
  
  'Set oJiraService = New MSXML2.ServerXMLHTTP60
  
  sRest = ""
  Jquery = Sheets("Plan").Cells(2, 6)
  GetUrl = "http://test.jira.services.test.com/jira"
  Call URLEncode(Jquery, Query)
  ApiUrl = GetUrl + "/rest/api/2/search?jql=" + Query + "&startAt=" + _
                        CStr(startAt) + "&maxResults=" + _
                        CStr(maxResults) & "&fields=customfield_15744,customfield_15628,customfield_15621,customfield_12683,customfield_15725,customfield_11770,customfield_15921,priority,status,key,summary,assignee,reporter,created,resolutiondate,duedate"

'  ApiUrl = GetUrl + "/rest/api/2/search?jql=" + Query + "&startAt=" + _
'                        CStr(startAt) + "&maxResults=" + _
'                        CStr(maxResults)

  'Sheets("Jquery").Cells(7, 6) = ApiUrl

  
  With oJiraService
    .Open "GET", ApiUrl, False
    .setRequestHeader "Content-Type", "application/json"
    '.setRequestHeader "Accept", "application/json"
    .send
    sRest = .responseText
    sStatus = .Status & " | " & .statusText
  End With
  
    'Set FSO = CreateObject("Scripting.FileSystemObject")
    'Dim Fileout As Object
    'Set Fileout = FSO.CreateTextFile("Z:\QTP Tests\JiraDefectsHtml.json", True, True)
    'Fileout.Write sRest
    'Fileout.Close
  
  
 If Len(sRest) < 100 Then
     Exit For
  End If
  

  Dim oDict As Dictionary
  Set oDict = ParseJson(sRest)
   
   For n = 1 To oDict("issues").Count
   
   On Error Resume Next
   
       totRows = Sheets("Plan").Range("E" & Sheets("Plan").Rows.Count).End(xlUp).Row
        
       Set WB = ThisWorkbook.Sheets("Plan")
       
       
       ''Obl
        ''????
       
       ''POD value(MII POD P)
        WB.Cells(totRows + 1, 2) = oDict("issues")(n)("fields")("customfield_15921")("value")
        ''Priority
        WB.Cells(totRows + 1, 3) = oDict("issues")(n)("fields")("priority")("name")
        ''MII State
        WB.Cells(totRows + 1, 4) = oDict("issues")(n)("fields")("customfield_15744")("value")
         'Keys
        WB.Cells(totRows + 1, 5) = oDict("issues")(n)("key")
        'Summary
        WB.Cells(totRows + 1, 6) = oDict("issues")(n)("fields")("summary")
         ''Created
        strCreated = ""
        cCreated = ""
        strCreated = Split(oDict("issues")(n)("fields")("created"), "T")
        cCreated = Format(strCreated(0), "DD/MMM/YY")
        WB.Cells(totRows + 1, 7) = cCreated
         'Due date
       strDuedate = ""
       cDuedate = ""
       strDuedate = Split(oDict("issues")(n)("fields")("duedate"), "T")
       cDuedate = Format(strDuedate(0), "DD/MMM/YY")
       WB.Cells(totRows + 1, 8) = cDuedate
        
       'To be escalated?
       WB.Cells(totRows + 1, 9) = oDict("issues")(n)("fields")("customfield_15725")("value")
       
       ''Resolved
       strResolved = ""
       cResolved = ""
       strResolved = Split(oDict("issues")(n)("fields")("resolutiondate"), "T")
        cResolved = Format(strResolved(0), "DD/MMM/YY")
        WB.Cells(totRows + 1, 10) = cResolved
        
        MsgBox oDict("issues")(n)("fields")("customfield_15621")(4)("value")
        
       'ROD Obligation Name(s)customfield_15621
       strobligval = ""
       strFinalobl = ""
       For IntObl = 1 To 5
            oblvalue = oDict("issues")(n)("fields")("customfield_15621")(IntObl)("value")
            If oblvalue <> "" Then
                strobligval = strobligval + oblvalue & ","
                oblvalue = ""
            End If
       Next
       
       strFinalobl = Mid(strobligval, 1, Len(strobligval) - 1)
       WB.Cells(totRows + 1, 11) = strFinalobl
              
         ''MII Commitment Type
       WB.Cells(totRows + 1, 12) = oDict("issues")(n)("fields")("customfield_15628")("value")
        
             ''Compliance/Legal Reviewed Date
       strReviewddate = ""
       cReviewdate = ""
       strReviewddate = Split(oDict("issues")(n)("fields")("customfield_11770"), "T")
       cReviewdate = Format(strReviewddate(0), "DD/MMM/YY")
       WB.Cells(totRows + 1, 13) = cReviewdate
       
       '' Status
        WB.Cells(totRows + 1, 14) = oDict("issues")(n)("fields")("status")("name")
        
'       ''Assignee
'        WB.Cells(totRows + 1, 15) = oDict("issues")(n)("fields")("assignee")("name")
'       ''Reporter
'        WB.Cells(totRows + 1, 16) = oDict("issues")(n)("fields")("reporter")("name")
       
             
     
    Set WB = Nothing
  Next n
  
  startAt = startAt + 50
  On Error GoTo 0
  'Set oJiraService = Nothing
  Set oDict = Nothing
Next


''Fill The Data in Run_state Jira

strRowcount = Sheets("JIRA Run Rate").UsedRange.Rows.Count
strDefRowcount = Sheets("Plan").UsedRange.Rows.Count
'''Created
Set rngSearch = Sheets("Plan").Range("G1:" & "G" & strDefRowcount)
For IntIteration = 5 To strRowcount
  readDate = Sheets("JIRA Run Rate").Cells(IntIteration, 1)
  Call FindMultipleOccurrences("Created", rngSearch, readDate, cntallPTTTR, cntTransaction, cntPostTrade, cntRTS23)
  Sheets("JIRA Run Rate").Cells(IntIteration, 2) = cntallPTTTR
  Sheets("JIRA Run Rate").Cells(IntIteration, 3) = cntTransaction
  Sheets("JIRA Run Rate").Cells(IntIteration, 4) = cntPostTrade
  Sheets("JIRA Run Rate").Cells(IntIteration, 5) = cntRTS23
    Next

'''Resolved
Set rngSearch = Sheets("Plan").Range("J1:" & "J" & strDefRowcount)
For IntIteration = 5 To strRowcount
  readDate = Sheets("JIRA Run Rate").Cells(IntIteration, 1)
  Call FindMultipleOccurrences("Resolved", rngSearch, readDate, cntallPTTTR, cntTransaction, cntPostTrade, cntRTS23)
  Sheets("JIRA Run Rate").Cells(IntIteration, 7) = cntallPTTTR
  Sheets("JIRA Run Rate").Cells(IntIteration, 8) = cntTransaction
  Sheets("JIRA Run Rate").Cells(IntIteration, 9) = cntPostTrade
  Sheets("JIRA Run Rate").Cells(IntIteration, 10) = cntRTS23
Next


'''Cancelled
Set rngSearch = Sheets("Plan").Range("J1:" & "J" & strDefRowcount)
For IntIteration = 5 To strRowcount
  readDate = Sheets("JIRA Run Rate").Cells(IntIteration, 1)
  Call FindMultipleOccurrences("Canceled", rngSearch, readDate, cntallPTTTR, cntTransaction, cntPostTrade, cntRTS23)
  Sheets("JIRA Run Rate").Cells(IntIteration, 12) = cntallPTTTR
  Sheets("JIRA Run Rate").Cells(IntIteration, 13) = cntTransaction
  Sheets("JIRA Run Rate").Cells(IntIteration, 14) = cntPostTrade
  Sheets("JIRA Run Rate").Cells(IntIteration, 15) = cntRTS23
Next


''Update JiraMetrics

Call Module3.JiraSummary

'' Update Jiragraphics and cumulative data

Call Module4.Jirachartupdate

''Update PPT with graphs data

Call Module5.copyGraphsToppt

''Saving workbook

ThisWorkbook.Save



  'Determine how many seconds code took to run
  MinutesElapsed = Format((Timer - StartTime) / 86400, "hh:mm:ss")

'Notify user in seconds
  MsgBox "This code ran successfully in " & MinutesElapsed & " minutes", vbInformation

End Sub

Public Function URLEncode(ByVal StringToEncode, ByRef URLEncode1)
 
  Dim CurChr As Integer
  CurChr = 1

  Do Until CurChr - 1 = Len(StringToEncode)
    Select Case Asc(Mid(StringToEncode, CurChr, 1))
      Case 48 To 57, 65 To 90, 97 To 122
        TempAns = TempAns & Mid(StringToEncode, CurChr, 1)
      Case 32
        If UsePlusRatherThanHexForSpace = True Then
          TempAns = TempAns & "+"
        Else
          TempAns = TempAns & "%" & Hex(32)
        End If
      Case Else
        TempAns = TempAns & "%" & _
          Right("0" & Hex(Asc(Mid(StringToEncode, _
          CurChr, 1))), 2)
    End Select

    CurChr = CurChr + 1
  Loop
        URLEncode1 = TempAns

End Function

Private Function dotfind(a, b, c) As Integer
    dotfind = 0
End Function


Public Function getValue(issue As Object, Key As String) As String
    Dim rvalue As String
    On Error GoTo gerr
    Select Case Key
        Case "key"
            If IsNull(issue("key")) Then
                rvalue = ""
            Else
                rvalue = issue("key")
            End If
        Case "status"
            If IsNull(issue("fields")("status")("name")) Then
                rvalue = ""
            Else
                rvalue = issue("fields")("status")("name")
            End If
        Case "project"
            If IsNull(issue("fields")("project")("name")) Then
                rvalue = ""
            Else
                rvalue = issue("fields")("project")("name")
            End If
        Case "summary"
            If IsNull(issue("fields")("summary")) Then
                rvalue = ""
            Else
                rvalue = issue("fields")("summary")
            End If
        Case "created"
            If IsNull(issue("fields")("created")) Then
                rvalue = ""
            Else
                rvalue = fromISODateTimeNoZ(issue("fields")("created"))
            End If
        Case "updated"
            If IsNull(issue("fields")("updated")) Then
                rvalue = ""
            Else
                rvalue = fromISODateTimeNoZ(issue("fields")("updated"))
            End If
        Case "assignee"
            If IsNull(issue("fields")("assignee")) Then
                rvalue = ""
            Else
                rvalue = issue("fields")("assignee")("name")
            End If
        Case "reporter"
            If IsNull(issue("fields")("reporter")) Then
                rvalue = ""
            Else
                rvalue = issue("fields")("reporter")("name")
            End If
        Case "fixversions"
            If IsNull(issue("fields")("fixversions")) Then
                rvalue = ""
            Else
                rvalue = GetFieldsWithCount(issue("fields")("fixversions"))
            End If
        Case "issuetype"
            If IsNull(issue("fields")("issuetype")) Then
                rvalue = ""
            Else
                rvalue = issue("fields")("issuetype")("name")
            End If
        Case "labels"
            If IsNull(issue("fields")("labels")) Then
                rvalue = ""
            Else
                rvalue = GetFieldsWithCount(issue("fields")("labels"))
            End If
        Case "prioity"
            If IsNull(issue("fields")("priority")) Then
                rvalue = ""
            Else
                rvalue = issue("fields")("priority")("name")
            End If
        Case "severity"
            If IsNull(issue("fields")("customfield_12520")("value")) Then
                rvalue = ""
            Else
                rvalue = issue("fields")("customfield_12520")("value")
            End If
        Case "resolution"
            If IsNull(issue("fields")("resolution")) Then
                rvalue = ""
            Else
                rvalue = issue("fields")("resolution")("name")
            End If
        Case "issuelinks"
            If IsNull(issue("fields")("issuelinks")) Then
                rvalue = ""
            Else
                rvalue = GetFieldsIssueLink(issue("fields")("issuelinks"))
            End If
        Case "businessDriver"
            If IsNull(issue("fields")("customfield_15623")) Then
                rvalue = ""
            Else
                rvalue = issue("fields")("customfield_15623")
            End If
        Case "businessSignificance"
            If IsNull(issue("fields")("customfield_12420")) Then
                rvalue = ""
            Else
                rvalue = issue("fields")("customfield_12420")
            End If
        Case "description"
            If IsNull(issue("fields")("description")) Then
                rvalue = ""
            Else
                rvalue = issue("fields")("description")
            End If
        Case "detailedDescription"
            If IsNull(issue("fields")("customfield_15621")) Then
                rvalue = ""
            Else
                rvalue = issue("fields")("customfield_15621")
            End If
        Case "billable"
            If IsNull(issue("fields")("customfield_15926")) Then
                rvalue = ""
            Else
                rvalue = issue("fields")("customfield_15926")(1)("value")
            End If
        Case "LOE"
            If IsNull(issue("fields")("customfield_15629")) Then
                rvalue = ""
            Else
                rvalue = issue("fields")("customfield_15629")
            End If
        Case "approvalRequired"
            If IsNull(issue("fields")("customfield_16320")) Then
                rvalue = ""
            Else
                rvalue = issue("fields")("customfield_16320")("value")
            End If
        Case "approvedBy"
            If IsNull(issue("fields")("customfield_11622")) Then
                rvalue = ""
            Else
                rvalue = issue("fields")("customfield_11622")("displayName")
            End If
    End Select
    getValue = rvalue
    GoTo finish:
gerr:
    AppendStatus ("error getValue issue key: " & Key & " " & Err.Description)
finish:
End Function




Function FindMultipleOccurrences(ByVal strCheck, ByVal rngSearch, ByVal readDate, ByRef cntallPTTTR, ByRef cntTransaction, ByRef cntPostTrade, ByRef cntRTS23)
'finding multiple occurrences of a value in a range - find the string "OldItem" in a search range, and replace with string "NewItem" and change its font color.
x = 0
'Dim rngSearch As Range, rngLast As Range, rngFound As Range
Dim strFirstAddress As String
'set the search range:

'specify last cell in range:
'readDate = Sheets("JIRA Run Rate").Cells(2, 1)
strDate = Format(readDate, "Short Date")

Set rngLast = rngSearch.Cells(rngSearch.Cells.Count)
'Find the string "OldItem" in search range, when it first occurrs. Note that the After argument is used to begin search after the last cell in the search range.
Set rngFound = rngSearch.Find(What:=CDate(strDate), After:=rngLast, LookIn:=xlFormulas, LookAt:=xlWhole, SearchOrder:=xlByRows, SearchDirection:=xlNext, MatchCase:=False, SearchFormat:=False)
'if "OldItem" is found in search range:
Const vbNullChar = 0
cntTransaction = vbNullChar
cntPostTrade = vbNullChar
cntRTS23 = vbNullChar
cntallPTTTR = vbNullChar
If Not rngFound Is Nothing Then
'saves the address of the first occurrence of "OldItem", in the strFirstAddress variable:
strFirstAddress = rngFound.Address
Do
'Find next occurrence of "OldItem". Note, that we do not start from the first occurrence of "OldItem" (ie. strFirstAddress).
strcol = rngFound.Column
strRow = rngFound.Row
If strCheck = "Created" Then
    If InStr(Sheets("Plan").Cells(strRow, strcol + 4), "Transaction") Then
    cntTransaction = cntTransaction + 1
    cntallPTTTR = cntallPTTTR + 1
    End If
    If InStr(Sheets("Plan").Cells(strRow, strcol + 4), "Post Trade") Then
    cntPostTrade = cntPostTrade + 1
    cntallPTTTR = cntallPTTTR + 1
    End If
    If InStr(Sheets("Plan").Cells(strRow, strcol + 4), "Instrument") Then
    cntRTS23 = cntRTS23 + 1
    cntallPTTTR = cntallPTTTR + 1
    End If
End If

If strCheck = "Resolved" Then
    If InStr(Sheets("Plan").Cells(strRow, strcol + 1), "Transaction") Then
      If Sheets("Plan").Cells(strRow, strcol + 4) = "Resolved" Then
           cntTransaction = cntTransaction + 1
       cntallPTTTR = cntallPTTTR + 1
      End If
    End If
    If InStr(Sheets("Plan").Cells(strRow, strcol + 1), "Post Trade") Then
        If Sheets("Plan").Cells(strRow, strcol + 4) = "Resolved" Then
        cntPostTrade = cntPostTrade + 1
        cntallPTTTR = cntallPTTTR + 1
        End If
    End If
    If InStr(Sheets("Plan").Cells(strRow, strcol + 1), "Instrument") Then
     If Sheets("Plan").Cells(strRow, strcol + 4) = "Resolved" Then
     cntRTS23 = cntRTS23 + 1
     cntallPTTTR = cntallPTTTR + 1
     End If
    End If
End If

If strCheck = "Canceled" Then
    If InStr(Sheets("Plan").Cells(strRow, strcol + 1), "Transaction") Then
      If Sheets("Plan").Cells(strRow, strcol + 4) = "Canceled" Then
       cntTransaction = cntTransaction + 1
       cntallPTTTR = cntallPTTTR + 1
      End If
    End If
    If InStr(Sheets("Plan").Cells(strRow, strcol + 1), "Post Trade") Then
        If Sheets("Plan").Cells(strRow, strcol + 4) = "Canceled" Then
        cntPostTrade = cntPostTrade + 1
        cntallPTTTR = cntallPTTTR + 1
        End If
    End If
    If InStr(Sheets("Plan").Cells(strRow, strcol + 1), "Instrument") Then
     If Sheets("Plan").Cells(strRow, strcol + 4) = "Canceled" Then
     cntRTS23 = cntRTS23 + 1
     cntallPTTTR = cntallPTTTR + 1
     End If
    End If
End If



Set rngFound = rngSearch.FindNext(rngFound)
'replace "OldItem" with "NewItem":
'rngFound.Value = "NewItem"
'font color is changed:
'rngFound.Font.Color = vbRed
x = x + 1
'The Loop ends on reaching the first occurrence of "OldItem" (ie. strFirstAddress). We have retained the value of "OldItem" till this step because if in the first occurrence, "OldItem" had been replaced by "NewItem", this step would
Loop Until rngFound.Address = strFirstAddress
End If

Set rngLast = Nothing
Set rngFound = Nothing


End Function



Function delrows()
'        Dim ws3 As Worksheet
'
'        Set ws3 = ThisWorkbook.Sheets("GSAM")
'        ilimit = ws3.UsedRange.Rows.Count
'        For k = 2 To ilimit
'            ws3.Cells(2, 1).EntireRow.Delete
'        Next
        
        Worksheets("Plan").Rows(5 & ":" & Worksheets("Plan").Rows.Count).Delete

End Function







